{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SimpleTTS","text":"<p>A lightweight Python library for running TTS models with a unified API.</p> <p>Warning</p> <p>This project is under active development and APIs may change. Not recommended for production use yet.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\ude80 Simple and intuitive API - get started in minutes</li> <li>\ud83d\udd04 No model lock-in - switch models with just a few lines of code  </li> <li>\ud83c\udfaf Focus on ease of use - a single API for all models</li> <li>\ud83d\udce6 Minimal dependencies - one package for all models</li> <li>\ud83d\udd0c Extensible architecture - easily add new models</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Install the latest release from PyPI:</p> <pre><code>pip install simpletts\n</code></pre> <p>Or get the latest version from source:</p> <pre><code>pip install git+https://github.com/fakerybakery/simpletts\n</code></pre>"},{"location":"#quick-start-simple-api","title":"Quick Start (Simple API)","text":"<p>The Simple API provides the easiest way to get started with SimpleTTS. With just a few lines of code, you can generate natural-sounding speech. The Simple API should not be used in environments that require customization or voice cloning - it's designed for quick and easy use cases.</p>"},{"location":"#python-api","title":"Python API","text":"<pre><code>from simpletts.models.xtts import XTTS\nimport soundfile as sf\n\ntts = XTTS(device=\"auto\")\n# Note: XTTS is licensed under the CPML license which restricts commercial use.\n\narray, sr = tts.synthesize(\"Hello, world!\", ref=\"sample.wav\")\n\nsf.write(\"output.wav\", array, sr)\n</code></pre>"},{"location":"#simpletts-vs-speechtoolkit","title":"SimpleTTS vs SpeechToolkit","text":"<p>I am also working on another project, SpeechToolkit. SpeechToolkit is designed to be a more comprehensive library with more models and features (such as voice conversion and ASR). On the other hand, SimpleTTS is designed to be a lightweight library with a simple API and minimal customization.</p>"},{"location":"#support-feedback","title":"Support &amp; Feedback","text":"<p>If you encounter any issues or have questions, please open an issue.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the BSD-3-Clause license. See the LICENSE file for more details.</p> <p>While SimpleTTS itself is open source and can be used commercially, please note that some supported models have different licensing terms:</p> <ul> <li>XTTS is licensed under CPML which restricts commercial use</li> <li>Kokoro is licensed under Apache-2.0 which allows commercial use</li> <li>Other models may have their own licensing requirements</li> </ul> <p>Note that SimpleTTS does not use the GPL-licensed <code>phonemizer</code> library. Instead, it uses the BSD-licensed <code>openphonemizer</code> alternative. While this may slightly reduce pronunciation accuracy, it's license is compatible with the BSD-3-Clause license of SimpleTTS.</p> <p>For complete licensing information for all included models and dependencies, please see the <code>licenses</code> directory.</p>"},{"location":"longform/","title":"Longform Narration","text":"<p>SimpleTTS supports longform narration as an experimental feature. Longform narration is powered by <code>txtsplit</code>. This means it may not always work as expected. Quality may vary.</p>"},{"location":"longform/#example","title":"Example","text":"<p>Here is an example of how to use the <code>longform</code> method to with Kokoro:</p> <pre><code>from simpletts.models.kokoro import Kokoro\nimport soundfile as sf\n\n# Initialize Kokoro model\ntts = Kokoro(device=\"auto\")\n\n# Synthesize speech\ntext = \"\"\"\nEnter your longform text here...\n\"\"\"\naudio, sr = tts.longform(text, ref=\"af_heart\")\n\n# Save output audio\nsf.write(\"output.wav\", audio, sr)\n</code></pre>"},{"location":"models/","title":"Models","text":""},{"location":"models/#supported-models","title":"Supported Models","text":"Model License Description Link XTTS CPML High-quality multilingual TTS with voice cloning capabilities XTTS Kokoro Apache-2.0 Fast and lightweight English TTS with voice cloning Kokoro F5-TTS CC BY-NC Superb voice cloning and naturalness, but slower and less stable F5-TTS Parler TTS Apache-2.0 Describe a voice with a text prompt Parler TTS"},{"location":"models/#xtts","title":"XTTS","text":"<pre><code>from simpletts.models.xtts import XTTS\nimport soundfile as sf\n\n# Initialize XTTS model\ntts = XTTS(device=\"auto\")\n\n# Synthesize speech\ntext = \"Hello world! This is a test of the XTTS text-to-speech system.\"\naudio, sr = tts.synthesize(text, ref=\"sample.wav\", language=\"en\")\n\n# Save output audio\nsf.write(\"output.wav\", audio, sr)\n</code></pre>"},{"location":"models/#kokoro","title":"Kokoro","text":"<p>Note</p> <p>Currently, only English is supported through SimpleTTS. The Kokoro model itself supports multiple languages.</p> <pre><code>from simpletts.models.kokoro import Kokoro\nimport soundfile as sf\n\n# Initialize Kokoro model\ntts = Kokoro(device=\"auto\")\n\n# Synthesize speech\ntext = \"Hello world! This is a test of the Kokoro text-to-speech system.\"\naudio, sr = tts.synthesize(text, ref=\"af_heart\")\n\n# Save output audio\nsf.write(\"output.wav\", audio, sr)\n</code></pre>"},{"location":"models/#f5-tts","title":"F5-TTS","text":"<pre><code>from simpletts.models.f5 import F5\nimport soundfile as sf\n\n# Initialize F5 model\ntts = F5(device=\"auto\")\n\n# Synthesize speech\ntext = \"Hello world! This is a test of the F5 text-to-speech system.\"\naudio, sr = tts.synthesize(text, ref=\"sample.wav\")\n\n# Save output audio\nsf.write(\"output.wav\", audio, sr)\n</code></pre>"},{"location":"models/#parler-tts","title":"Parler TTS","text":"<p>Note</p> <p>If you are trying to install Parler TTS, you may run into dependency conflicts or other issues. Parler TTS is not officially supported by the SimpleTTS project, please do not report issues to the SimpleTTS project if you run into issues.</p> <p>Parler TTS is not officially available on PyPI, so we cannot add it as a required dependency due to PyPI security requirements. We have published several unofficial packages for Parler TTS and its dependencies to PyPI, however this is not guaranteed to work.</p> <p>If you run into issues, please try running <code>pip uninstall parler-tts</code> and then <code>pip install git+https://github.com/huggingface/parler-tts</code>.</p> <pre><code>from simpletts.models.parler import Parler\nimport soundfile as sf\n\n# Initialize Parler model\ntts = Parler(device=\"auto\")\n\n# Synthesize speech\ntext = \"Hello world! This is a test of the Parler text-to-speech system.\"\naudio, sr = tts.synthesize(text, ref=\"A female speaker delivers a slightly expressive and animated speech with a moderate speed and pitch. The recording is of very high quality, with the speaker's voice sounding clear and very close up.\")\n\n# Save output audio\nsf.write(\"output.wav\", audio, sr)\n</code></pre>"},{"location":"roadmap/","title":"Roadmap","text":""},{"location":"roadmap/#models","title":"Models","text":"<ul> <li> XTTS - Production-ready multilingual TTS</li> <li> Kokoro - StyleTTS 2-based English TTS without voice cloning</li> <li> F5-TTS - Superb voice cloning and naturalness, but slower and less stable</li> <li> Parler TTS - Describe a voice with a text prompt</li> <li> StyleTTS 2 - Fast and efficient zero-shot voice cloning</li> <li> CosyVoice2 - Zero-shot voice cloning</li> <li> MetaVoice - 1.1B parameter zero-shot voice cloning model</li> <li> Fish Speech 1.5 - Zero-shot voice cloning</li> <li> OpenVoice V2 - Open source zero-shot voice cloning by MyShell</li> </ul>"},{"location":"roadmap/#features","title":"Features","text":"<ul> <li> Simple Python API for easy integration</li> <li> Command-line interface for quick testing and batch processing</li> <li> REST API and web interface for remote access</li> <li> Model benchmarking tools</li> <li> Batch processing support</li> <li> Audio post-processing options</li> <li> Allow easier extensibility with a plugin system</li> </ul>"},{"location":"simple/","title":"Simple API","text":"<p>The Simple API provides an easy way to get started with SimpleTTS without worrying about model selection or configuration. It uses the Kokoro model by default.</p>"},{"location":"simple/#usage","title":"Usage","text":"<p>Import the <code>tts</code> function:</p> <pre><code>from simpletts import tts\n</code></pre> <p>Generate and save audio:</p> <pre><code>tts(\"Hello world!\").save(\"output.wav\")\n</code></pre> <p>That's all you need! The Simple API handles all the model initialization and configuration behind the scenes.</p>"},{"location":"simple/#example","title":"Example","text":"<p>Here's a complete example showing natural text-to-speech generation:</p> <pre><code>from simpletts import tts\n\ntts(\"Enter your text. Supports longform synthesis.\").save(\"output.wav\")\n</code></pre> <p>The Simple API is great for basic use cases where you just want to convert text to speech without any special configuration. For more advanced usage like voice cloning or using different models, check out the Models documentation.</p>"}]}